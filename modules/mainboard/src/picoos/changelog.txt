Version 1.0.2:
  o  AVR port: Memory mode 1 added (POSCFG_TASKSTACKTYPE = 1) for dynamic memory access.
  o  AVR port: Support for the avr6 architecture with 3 byte PC added (for example ATmega2561,..)
  o  AVR port: Timer mapping in timerdef.h added for several AVR devices.
  o  AVR port: Save RAMPZ and EIND for MCUs with >=128 KB ROM. This is needed if ELPM/SPM 
     and EICALL/EIJMP are used.
  o  MyCPU port improved, now faster context switching and better memory management
  o  Bug in function posTaskSetPriority() fixed


Version 1.0.1:
  o  define "POSCALL" added to every function prototype
  o  port specific functions p_pos_lock() / p_pos_unlock() added
  o  port for MyCPU (http://www.mycpu.eu) added


Version 1.0.0:
  o  ARM port re-structured, new processors added
  o  function nosMemRealloc() added
  o  fixed some compiler warnings in nano layer
  o  small configuration problem fixed in picoos.h
  o  small configuration problem fixed in x86w32 port
  o  ports can now be split into a common and a CPU specific part
  o  "HZ" definition moved from port.h to poscfg.h
  o  The x86w32-port does no more consume 100% CPU time when pico]OS is idle.


Version 0.9.4:
  o  fixed a NULL pointer write in function posListRemove()
  o  fixed a bug in nano layer initialization
  o  picoos core: assertion macros added for better debugging
  o  x86w32 port: new functions for simulated hardware interrupts added


Version 0.9.3:
  o  bug fix in nosTaskCreate(): fixed a possible configuration problem
  o  makefiles changed, output directory structure is now selfexplaining
  o  makefiles extended to support a modularized software structure
  o  the win32 port does now support POSCFG_TASKSTACKTYPE 0/1/2
  o  void* types exchanged by structure pointers (makes the compiler more sensitive)
  o  configuration flag POSCFG_FEATURE_LISTLEN added
  o  more debugging features added


Version 0.9.2:
  o  debugging feature added:  POSCFG_FEATURE_DEBUGHELP
  o  implemented a more flexible scheme to disable interrupts
  o  some small bug fixes in MS Windows 32Bit port
  o  some small bug fixes in the example code
  o  documentation updated, now easier for beginners


Version 0.9.1:
  o  bug fix: jiffies, posCurrentTask_g, posNextTask_g,
     posInInterrupt_g, posRunning_g are now marked as "volatile"
  o  bug fix: file compile.mak, DOS include path is now correctly converted
  o  bug fix: in posListAdd() was the new list head not set (new->head=listhead)
  o  fix: errno variable fixed for some external runtime library header files.
  o  directory structure changed: Now there is a new subdirectory in the port
     directories. All config files have been moved into the subdir "defaults".
  o  MS Windows 32Bit port added. Now you are able to develope, test and
     debug your pico]OS programs with the MS Visual Studio IDE (for example).


Version 0.9.0:
  o  nono layer: registry added, now support for named tasks/semas/timer etc.
  o  faster initialization of the CPU usage measurement on fast CPUs
  o  documentation updated
  o  minor changes:
       - keyword 'extern' added to function prototypes
       - test for correct jiffies configuration added to n_core.c
       - NOS_FEATURE_CPUUSAGE renamed to NOSCFG_FEATURE_CPUUSAGE


Version 0.8.1:
  o  many new examples added to the examples directory
  o  port directory structure changed: subdirectory 'boot' introduced
  o  Bottom Halfs can now be triggered from outside the pico]OS interrupt scope
  o  ARM port for SAMSUNG S3C2510A added (thanks Jun Li)
  o  AVR-Port: 
       - Bugfix: Set R0 in the frame for the ISR to Zero(0)
       - New Feature: Added a dedicated stack for the interrupts.
       - New Feature: Added a macro for generating a picoos compatible
         interrupt frame (PICOOS_SIGNAL).


Version 0.8.0:
  o  nano layer introduced. New features are:
       - Bottom Halfs
       - Multitasking able console I/O
       - Multitasking able dynamic memory management
       - Standardized API for easier task creation
       - CPU usage measurement


Version 0.7.0:
  o  nonblocking/blocking lists added (lists can be used for packet queues)
  o  added user local storage in task control block
  o  some small bug fixes in dynamic memory management
  o  6502 port supports now dynamic count of tasks


Version 0.6.0:
  o  atomic variables added
  o  posInstallIdleTaskHook returns now the ptr to the previous hook function
  o  error code names changed to resolve a conflict with Unix style error codes
  o  bug fixed in dynamic memory management, memory management improved


Version 0.5.1:
  o  added lookup-table for better bit-shift performance on 8bit CPUs
  o  several functions renamed, postfix alloc->create, free->destroy  
  o  feature names have changed accordingly to the function names
  o  added macro MS() that converts milliseconds into timer ticks
  o  added defined error codes, e.g. -EOK, -EFAIL, -ENOMEM and so on.


Version 0.5.0:
  o this is the first public version
  o Atmel AVR port added
  o 6502 port: findbit function improved
  o functions posMessageAlloc/posMessageSend are now interrupt save 
  o file poscfg.h split into poscfg.h and port.h


Version 0.4.4:
  o message box functions renamed: Msg -> Message
  o function posInstallIdleTaskHook added
  o function posIsTaskUnused renamed to posTaskUnused
  o preprocessor directives corrected (unneeded braces removed)
  o pico]OS core prepared for additional nano layer


Version 0.4.3:
  o fixed some type writing errors (lower/upper case) in the sources
  o some improvements (no bugs found)
  o generic findbit (file fbit_gen.c) improved
  o architecure port added: the PowerPC IBM PPC440 is now supported


Version 0.4.2:
  o documentation updated
  o all prefixes 'os' changed to 'pos'


Version 0.4.1:
  o software interrupts added
  o bug fixed in round robin scheduling mechanism
  o bug fixed in function os_sched_event
  o bug fixed in function posTaskYield


Version 0.4:
  o minor bugfixes
  o make file support added


Version 0.3.2:
  o filename changed: core.c renamed to picoos.c
  o the function p_pos_initArch is called from posInit to initialize the port
  o minor bugfixes and improvements
  o architecure port added:  6502 compatible processors are now supported


Version 0.3.1:
  o flags-functions added (= one bit semaphores / events)
  o some code is put into separate subroutines for small code configuration
  o bad bugs in the event system fixed
  o license changed to the the modified BSD license
  o doxygen documentation tags added


Version 0.3:
  o sleep-timer lists can be double chained
  o function renamed:  posSemaWait to posSemaGet
  o function added: posSemaWait
  o function added: posMsgWait
  o code can be defined to be small: POSCFG_SMALLCODE
  o jiffies counter variable added
  o timer added
  o internal data structures are now memory aligned
  o much improvements and bugfixes


Version 0.2:
  o MTYPE_t renamed to UMVAR_t
  o signed type of MTYPE_t added:  MVAR_t
  o function return status is now 0 on success and -1 on error
  o function p_pos_initTask() for TASKSTACKTYPE == 2 returns now a status
  o semaphore functions now return an error status
  o names of defines SYS_TASKTABSIZE_X and SYS_TASKTABSIZE_Y swapped
  o code size improvements
  o array posTaskTable_g[] is now one-dimensional
  o posTaskCreate returns now a handle to the new task
  o function added: osGetCurrentTask
  o function added: posTaskUnused
  o function added: posTaskGetPriority
  o function added: posTaskSetPriority
  o mutexes added
  o message boxes added
  o argument checking added
  o much improvements and bugfixes


Version 0.1:
  Initial version


--------------------------------------------
  Contact Information:

  Dennis Kuschel
  Emanuel-Backhaus-Str. 20
  28277 Bremen
  GERMANY

  email: dennis_k@freenet.de
  web  : http://mycpu.mikrocontroller.net
         http://picoos.sourceforge.net
--------------------------------------------
